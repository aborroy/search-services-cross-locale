# This docker-compose file will spin up an ACS cluster on a local host or on a server and it requires a minimum of 12GB Memory to distribute among containers.
# Limit container memory and assign X percentage to JVM.  There are couple of ways to allocate JVM Memory for ACS Containers
# For example: 'JAVA_OPTS: "$JAVA_OPTS -XX:+PrintFlagsFinal -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"'
# But, as per Oracle docs (https://docs.oracle.com/javase/9/gctuning/parallel-collector1.htm#JSGCT-GUID-CAB83393-3438-44ED-98F0-D15641B43C7D)
# If container memory is not explicitly set, then the above flags will default max heap to 1/4th of container's memory which may not be ideal.
# Hence, setting up explicit Container memory and then assigning a percentage of it to the JVM for performance tuning.

# Using version 2 as 3 does not support resource constraint options (cpu_*, mem_* limits) for non swarm mode in Compose
version: "2"

services:

    alfresco:
        image: alfresco/alfresco-content-repository-community:6.1.2-ga
        mem_limit: 1500m
        environment:
            JAVA_OPTS : "
                -Ddb.driver=org.postgresql.Driver
                -Ddb.username=alfresco
                -Ddb.password=alfresco
                -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
                -Dsolr.host=solr6
                -Dsolr.port=8983
                -Dsolr.secureComms=none
                -Dsolr.base.url=/solr
                -Dindex.subsystem.name=solr6
                -Dshare.host=localhost
                -Dalfresco.port=8082
                -Daos.baseUrlOverwrite=http://localhost:8082/alfresco/aos
                -Dmessaging.broker.url=\"failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true\"
                -Ddeployment.method=DOCKER_COMPOSE
                -Dcsrf.filter.enabled=false
                -Xms1g -Xmx1g
                "
        volumes:
            - ./data/alf-repo-data:/usr/local/tomcat/alf_data
            - ./logs/alfresco:/usr/local/tomcat/logs
        ports:
            - 8082:8080

    share:
        image: alfresco/alfresco-share:6.1.0
        mem_limit: 1g
        environment:
            - REPO_HOST=alfresco
            - REPO_PORT=8080
            - "CATALINA_OPTS= -Xms500m -Xmx500m"
        volumes:
            - ./logs/share:/usr/local/tomcat/logs
        ports:
            - 8080:8080

    postgres:
        image: postgres:10.1
        mem_limit: 1500m
        environment:
            - POSTGRES_PASSWORD=alfresco
            - POSTGRES_USER=alfresco
            - POSTGRES_DB=alfresco
        command: postgres -c max_connections=300 -c log_min_messages=LOG
        volumes:
           - ./data/postgres-data:/var/lib/postgresql/data
           - ./logs/postgres:/var/log/postgresql
        ports:
            - 5432:5432

    solr6:
        image: alfresco/alfresco-search-services:1.3.0.1
        mem_limit: 2500m
        environment:
            # Solr needs to know how to register itself with Alfresco
            - SOLR_ALFRESCO_HOST=alfresco
            - SOLR_ALFRESCO_PORT=8080
            # Alfresco needs to know how to call solr
            - SOLR_SOLR_HOST=solr6
            - SOLR_SOLR_PORT=8983
            # Create the default alfresco and archive cores
            - SOLR_CREATE_ALFRESCO_DEFAULTS=alfresco,archive
            - "SOLR_JAVA_MEM=-Xms2g -Xmx2g"
        volumes:
            - ./config/shared.properties:/opt/alfresco-search-services/solrhome/conf/shared.properties
            - ./config/solrconfig.xml:/opt/alfresco-search-services/solrhome/templates/rerank/conf/solrconfig.xml
            # Set permissions for user with uid 1000 ('isadm' in host, 'solr' in container)
            - ./data/solr-data:/opt/alfresco-search-services/data
            - ./logs/solr:/opt/alfresco-search-services/logs
        ports:
            - 8083:8983

    activemq:
        image: alfresco/alfresco-activemq:5.15.6
        mem_limit: 2048m
        ports:
            - 8161:8161 # Web Console
            - 5672:5672 # AMQP
            - 61616:61616 # OpenWire
            - 61613:61613 # STOMP

    content-app:
        image: alfresco/alfresco-content-app:latest
        ports:
            - 8084:80

    api-explorer:
        build: ./api-explorer
        ports:
            - 8085:8080

    proxy:
        image: nginx:stable-alpine
        volumes:
            - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./logs/nginx:/var/log/nginx
        ports:
            - 80:80
